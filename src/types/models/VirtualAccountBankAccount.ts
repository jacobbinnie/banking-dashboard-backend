/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccountIdentification } from '../models/AccountIdentification';
import { HttpFile } from '../http/http';

export class VirtualAccountBankAccount {
    /**
    * Three-letter ISO 4217 currency code
    */
    'currency'?: string;
    'bankName'?: string;
    'bankAddress'?: string;
    /**
    * Two-letter ISO 3166 country code
    */
    'bankCountry'?: string;
    /**
    * The account identifications that identify the Beneficiary bank account.
    */
    'accountIdentifications'?: Set<AccountIdentification>;
    /**
    * Reference required for paying into the account. When no reference is provided, then one is not required to pay into the acount.
    */
    'payInReference'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankName",
            "baseName": "bankName",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankAddress",
            "baseName": "bankAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "bankCountry",
            "baseName": "bankCountry",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountIdentifications",
            "baseName": "accountIdentifications",
            "type": "Set<AccountIdentification>",
            "format": ""
        },
        {
            "name": "payInReference",
            "baseName": "payInReference",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return VirtualAccountBankAccount.attributeTypeMap;
    }

    public constructor() {
    }
}

