/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Subcategory } from '../models/Subcategory';
import { HttpFile } from '../http/http';

/**
* Income and Expense `Category` in which the transaction resides.
*/
export class Category {
    /**
    * Unique identifier of the category
    */
    'id'?: string;
    /**
    * Descriptive identifier of the category.
    */
    'label'?: string;
    /**
    * The country code of where the category transaction took place, denoted as a 3-digit character code - ISO 3166.
    */
    'country'?: string;
    'subcategories'?: Array<Subcategory>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string",
            "format": ""
        },
        {
            "name": "subcategories",
            "baseName": "subcategories",
            "type": "Array<Subcategory>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Category.attributeTypeMap;
    }

    public constructor() {
    }
}

