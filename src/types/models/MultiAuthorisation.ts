/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Details the additional levels of authorisation which are required from, and being managed by, the `Institution`.
*/
export class MultiAuthorisation {
    /**
    * _Mandatory_. Specifies the current status of the multi-authorisation flow.
    */
    'status'?: string;
    /**
    * __Mandatory__. Total number of authorisations required.
    */
    'numberOfAuthorisationRequired'?: number;
    /**
    * __Mandatory__. The total number of authorisations that have been recieved.
    */
    'numberOfAuthorisationReceived'?: number;
    /**
    * __Mandatory__. Date and time of when the authorisation was last updated.
    */
    'lastUpdatedDateTime'?: Date;
    /**
    * __Mandatory__. Date and time by when the authorisation flow must be completed before it expires and the authorisation request is terminated.
    */
    'expirationDateTime'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "numberOfAuthorisationRequired",
            "baseName": "numberOfAuthorisationRequired",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "numberOfAuthorisationReceived",
            "baseName": "numberOfAuthorisationReceived",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "lastUpdatedDateTime",
            "baseName": "lastUpdatedDateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expirationDateTime",
            "baseName": "expirationDateTime",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return MultiAuthorisation.attributeTypeMap;
    }

    public constructor() {
    }
}

