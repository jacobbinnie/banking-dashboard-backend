/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AddressDetails } from '../models/AddressDetails';
import { Amount } from '../models/Amount';
import { CurrencyExchange } from '../models/CurrencyExchange';
import { IsoBankTransactionCode } from '../models/IsoBankTransactionCode';
import { Merchant } from '../models/Merchant';
import { Payee } from '../models/Payee';
import { Payer } from '../models/Payer';
import { ProprietaryBankTransactionCode } from '../models/ProprietaryBankTransactionCode';
import { StatementReference } from '../models/StatementReference';
import { TransactionBalance } from '../models/TransactionBalance';
import { TransactionChargeDetails } from '../models/TransactionChargeDetails';
import { TransactionStatusEnum } from '../models/TransactionStatusEnum';
import { HttpFile } from '../http/http';

export class RealTimeTransaction {
    'id'?: string;
    'date'?: Date;
    'bookingDateTime'?: Date;
    'valueDateTime'?: Date;
    'status'?: TransactionStatusEnum;
    'transactionAmount'?: Amount;
    'grossAmount'?: Amount;
    'currencyExchange'?: CurrencyExchange;
    'chargeDetails'?: TransactionChargeDetails;
    'reference'?: string;
    'statementReferences'?: Array<StatementReference>;
    'description'?: string;
    'transactionInformation'?: Array<string>;
    'addressDetails'?: AddressDetails;
    'isoBankTransactionCode'?: IsoBankTransactionCode;
    'proprietaryBankTransactionCode'?: ProprietaryBankTransactionCode;
    'balance'?: TransactionBalance;
    'payeeDetails'?: Payee;
    'payerDetails'?: Payer;
    'merchant'?: Merchant;
    'supplementaryData'?: any;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "bookingDateTime",
            "baseName": "bookingDateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "valueDateTime",
            "baseName": "valueDateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TransactionStatusEnum",
            "format": ""
        },
        {
            "name": "transactionAmount",
            "baseName": "transactionAmount",
            "type": "Amount",
            "format": ""
        },
        {
            "name": "grossAmount",
            "baseName": "grossAmount",
            "type": "Amount",
            "format": ""
        },
        {
            "name": "currencyExchange",
            "baseName": "currencyExchange",
            "type": "CurrencyExchange",
            "format": ""
        },
        {
            "name": "chargeDetails",
            "baseName": "chargeDetails",
            "type": "TransactionChargeDetails",
            "format": ""
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string",
            "format": ""
        },
        {
            "name": "statementReferences",
            "baseName": "statementReferences",
            "type": "Array<StatementReference>",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionInformation",
            "baseName": "transactionInformation",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "addressDetails",
            "baseName": "addressDetails",
            "type": "AddressDetails",
            "format": ""
        },
        {
            "name": "isoBankTransactionCode",
            "baseName": "isoBankTransactionCode",
            "type": "IsoBankTransactionCode",
            "format": ""
        },
        {
            "name": "proprietaryBankTransactionCode",
            "baseName": "proprietaryBankTransactionCode",
            "type": "ProprietaryBankTransactionCode",
            "format": ""
        },
        {
            "name": "balance",
            "baseName": "balance",
            "type": "TransactionBalance",
            "format": ""
        },
        {
            "name": "payeeDetails",
            "baseName": "payeeDetails",
            "type": "Payee",
            "format": ""
        },
        {
            "name": "payerDetails",
            "baseName": "payerDetails",
            "type": "Payer",
            "format": ""
        },
        {
            "name": "merchant",
            "baseName": "merchant",
            "type": "Merchant",
            "format": ""
        },
        {
            "name": "supplementaryData",
            "baseName": "supplementaryData",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RealTimeTransaction.attributeTypeMap;
    }

    public constructor() {
    }
}



