/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { InstitutionIdentifiers } from '../models/InstitutionIdentifiers';
import { UserSettings } from '../models/UserSettings';
import { VRPSetupRequest } from '../models/VRPSetupRequest';
import { HttpFile } from '../http/http';

export class HostedVRPConsentRequestResponse {
    /**
    * Represents the Unique Id of the VRP consent request
    */
    'id': string;
    /**
    * Represents the Unique Id for the `User` assigned by Yapily.
    */
    'userId'?: string;
    /**
    * Represents the user-friendly reference to the `User`.
    */
    'applicationUserId'?: string;
    /**
    * Represents the Unique Id of the `Application` the user is associated with.
    */
    'applicationId': string;
    'institutionIdentifiers'?: InstitutionIdentifiers;
    'userSettings'?: UserSettings;
    /**
    * URL of client\'s server to redirect the PSU after completion of the consent authorisation.
    */
    'redirectUrl'?: string;
    'vrpSetup'?: VRPSetupRequest;
    /**
    * Represents the URL of Hosted UI page for the applicationId which initiates the user journey for the Consent. <br> URL would be appended with authToken, applicationId and userSettings.
    */
    'hostedUrl': string;
    /**
    * Represents the JWT Token signed by the certificate-vault using Yapily\'s keys.
    */
    'authToken': string;
    /**
    * Represents the date and time at which the Consent was created.
    */
    'createdAt': Date;
    /**
    * Represents the date and time at which the auth Token will expire.
    */
    'authorisationExpiresAt'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "applicationUserId",
            "baseName": "applicationUserId",
            "type": "string",
            "format": ""
        },
        {
            "name": "applicationId",
            "baseName": "applicationId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "institutionIdentifiers",
            "baseName": "institutionIdentifiers",
            "type": "InstitutionIdentifiers",
            "format": ""
        },
        {
            "name": "userSettings",
            "baseName": "userSettings",
            "type": "UserSettings",
            "format": ""
        },
        {
            "name": "redirectUrl",
            "baseName": "redirectUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "vrpSetup",
            "baseName": "vrpSetup",
            "type": "VRPSetupRequest",
            "format": ""
        },
        {
            "name": "hostedUrl",
            "baseName": "hostedUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "authToken",
            "baseName": "authToken",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "authorisationExpiresAt",
            "baseName": "authorisationExpiresAt",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return HostedVRPConsentRequestResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

