/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Type } from '../models/Type';
import { HttpFile } from '../http/http';

/**
* __Conditional__. Used to update the authorisation with the sca method of the user\'s choice for the `Institution` that uses the embedded authorisation flow. If the user has multiple sca methods configured, the `Institution` will allow the user to select from each of these options. <br><br>When the user has multiple sca methods for the `Institution`, this is the second step required in the embedded authorisation flow to authorise the `Consent`.
*/
export class ScaMethod {
    /**
    * __Mandatory__. The id of the sca method provided by the `Institution`
    */
    'id': string;
    'type'?: Type;
    /**
    * __Optional__. A description of the sca method if provided by the `Institution`
    */
    'description'?: string;
    /**
    * Additional information from the institution to provide to the PSU to help with the selected SCA method. The language is determined by the institution and may vary.
    */
    'information'?: string;
    /**
    * Data from the institution to provide to the PSU to complete authorisation. The language is determined by the institution and may vary.
    */
    'data'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Type",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "information",
            "baseName": "information",
            "type": "string",
            "format": ""
        },
        {
            "name": "data",
            "baseName": "data",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ScaMethod.attributeTypeMap;
    }

    public constructor() {
    }
}



