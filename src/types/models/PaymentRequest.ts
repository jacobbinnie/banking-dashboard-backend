/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Amount } from '../models/Amount';
import { InternationalPaymentRequest } from '../models/InternationalPaymentRequest';
import { Payee } from '../models/Payee';
import { Payer } from '../models/Payer';
import { PaymentContextType } from '../models/PaymentContextType';
import { PaymentType } from '../models/PaymentType';
import { PeriodicPaymentRequest } from '../models/PeriodicPaymentRequest';
import { HttpFile } from '../http/http';

/**
* __Mandatory__. The payment request object defining the details of the payment.
*/
export class PaymentRequest {
    /**
    * __Mandatory__. A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.
    */
    'paymentIdempotencyId': string;
    'payer'?: Payer;
    /**
    * __Optional__. The payment reference or description. Limited to a maximum of 18 characters long.
    */
    'reference'?: string;
    'contextType'?: PaymentContextType;
    /**
    * __Optional__. The payment purpose code. <br><br>Allowed values: INTP,DEPT,BEXP,LICF,SERV,SUPP,TRAD,SUBS,GDSV,ROYA,COMT,CHAR,ECPR,CLPR,INTE,LOAN,LOAR,INPC,INPR,INSC,INSU,LIFI,PPTI,HLRP,HLST,PDEP,IVPT,REBT,REFU,CDBL,CPKC,EDUC,FEES,GAMB,LOTT,GIFT,INSM,REOD,GOVT,TCSC,BLDM,RENT,DIVD,INVS,SAVG,HLTI,DNTS,LTCF,MDCS,VIEW,BECH,BENE,SSBE,PEFC,PENS,ADCS,BONU,COMM,SALA,ESTX,HSTX,INTX,PTXP,RDTX,TAXS,VATX,WHLD,TAXR,CBTV,ELEC,GASB,PHON,UBIL,WTER . <br><br>See [Payment Purpose code](https://docs.yapily.com/pages/payments/payments-resources/tri-pilot/) to see the definition of each code
    */
    'purposeCode'?: string;
    'type': PaymentType;
    'payee': Payee;
    'periodicPayment'?: PeriodicPaymentRequest;
    'internationalPayment'?: InternationalPaymentRequest;
    'amount': Amount;
    /**
    * __Conditional__. Used to specify the date of the payment when the payment type is one of the following:<ul>    <li><code>DOMESTIC_SCHEDULED_PAYMENT</code></li>    <li><code>DOMESTIC_PERIODIC_PAYMENT</code></li>    <li><code>INTERNATIONAL_SCHEDULED_PAYMENT</code></li>    <li><code>INTERNATIONAL_PERIODIC_PAYMENT</code></li></ul>
    */
    'paymentDateTime'?: Date;
    /**
    * __Optional__. Used to request the payer details in the payment response when the `Institution` provides the feature `READ_DOMESTIC_SINGLE_REFUND`.<br><br>See [Reverse Payments](https://docs.yapily.com/pages/knowledge/open-banking/reverse_payments/) for more information.
    */
    'readRefundAccount'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "paymentIdempotencyId",
            "baseName": "paymentIdempotencyId",
            "type": "string",
            "format": ""
        },
        {
            "name": "payer",
            "baseName": "payer",
            "type": "Payer",
            "format": ""
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string",
            "format": ""
        },
        {
            "name": "contextType",
            "baseName": "contextType",
            "type": "PaymentContextType",
            "format": ""
        },
        {
            "name": "purposeCode",
            "baseName": "purposeCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentType",
            "format": ""
        },
        {
            "name": "payee",
            "baseName": "payee",
            "type": "Payee",
            "format": ""
        },
        {
            "name": "periodicPayment",
            "baseName": "periodicPayment",
            "type": "PeriodicPaymentRequest",
            "format": ""
        },
        {
            "name": "internationalPayment",
            "baseName": "internationalPayment",
            "type": "InternationalPaymentRequest",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "Amount",
            "format": ""
        },
        {
            "name": "paymentDateTime",
            "baseName": "paymentDateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "readRefundAccount",
            "baseName": "readRefundAccount",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PaymentRequest.attributeTypeMap;
    }

    public constructor() {
    }
}



