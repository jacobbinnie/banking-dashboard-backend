/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { VirtualAccountOriginalPayment } from '../models/VirtualAccountOriginalPayment';
import { VirtualAccountRefundRequestAmount } from '../models/VirtualAccountRefundRequestAmount';
import { VirtualAccountRefundRequestBeneficiary } from '../models/VirtualAccountRefundRequestBeneficiary';
import { HttpFile } from '../http/http';

export class VirtualAccountRefundRequest {
    'originalPayment': VirtualAccountOriginalPayment;
    'amount'?: VirtualAccountRefundRequestAmount;
    /**
    * Reason for the refund. Allowed values [REQUESTED_BY_CUSTOMER, DUPLICATE_PAYMENT, OTHER]
    */
    'reason'?: string;
    /**
    * The date that the refund instruction will be executed. Must be in the present or future
    */
    'paymentDate'?: string;
    /**
    * Reference to be associated with the refund. This will appear on the beneficiary\'s bank statement
    */
    'reference'?: string;
    /**
    * Indicates which account will be used for refund. Allowed value: SOURCE
    */
    'refundTo': string;
    /**
    * __Conditional__. This field is required when refundTo is BENEFICIARY. Indicates if the refund is back to the original payer. Allowed value: true
    */
    'refundToOriginalPayer'?: boolean;
    /**
    * __Conditional__. This field is required when refundTo is SOURCE. Indicates the type of Beneficiary as either an INDIVIDUAL or BUSINESS.
    */
    'beneficiaryType'?: string;
    'beneficiary'?: VirtualAccountRefundRequestBeneficiary;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "originalPayment",
            "baseName": "originalPayment",
            "type": "VirtualAccountOriginalPayment",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "VirtualAccountRefundRequestAmount",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentDate",
            "baseName": "paymentDate",
            "type": "string",
            "format": "date"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string",
            "format": ""
        },
        {
            "name": "refundTo",
            "baseName": "refundTo",
            "type": "string",
            "format": ""
        },
        {
            "name": "refundToOriginalPayer",
            "baseName": "refundToOriginalPayer",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "beneficiaryType",
            "baseName": "beneficiaryType",
            "type": "string",
            "format": ""
        },
        {
            "name": "beneficiary",
            "baseName": "beneficiary",
            "type": "VirtualAccountRefundRequestBeneficiary",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return VirtualAccountRefundRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

