/**
 * Yapily API
 * The Yapily API enables connections between your application and users\' banks. For more information check out our [documentation](https://docs.yapily.com/).<br><br>In particular, make sure to view our [Getting Started](https://docs.yapily.com/pages/home/getting-started/) steps if this is your first time here.<br><br>While testing the API, our list of [sandbox credentials](https://docs.yapily.com/pages/key-concepts/sandbox-credentials/) maybe useful.
 *
 * OpenAPI spec version: 2.30.1
 * Contact: support@yapily.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AmountDetailsResponse } from '../models/AmountDetailsResponse';
import { HostedPaymentPhase } from '../models/HostedPaymentPhase';
import { HostedPaymentStatusDetails } from '../models/HostedPaymentStatusDetails';
import { InstitutionIdentifiersResponse } from '../models/InstitutionIdentifiersResponse';
import { PayeeDetailsResponse } from '../models/PayeeDetailsResponse';
import { PayerDetailsResponse } from '../models/PayerDetailsResponse';
import { PaymentContextTypeResponse } from '../models/PaymentContextTypeResponse';
import { PaymentTypeResponse } from '../models/PaymentTypeResponse';
import { HttpFile } from '../http/http';

export class HostedPayment {
    /**
    * The Unique Identifier of the payment.
    */
    'paymentId'?: string;
    /**
    * The Unique Identifier of the payment created using Yapily hosted application.
    */
    'hostedPaymentId'?: string;
    /**
    * The Unique Identifier of the consent.
    */
    'consentId'?: string;
    'institutionIdentifiers'?: InstitutionIdentifiersResponse;
    /**
    * The phase reached by the payment and its timestamp.
    */
    'phases'?: Array<HostedPaymentPhase>;
    /**
    * Details of the payment status.
    */
    'statusDetails'?: Array<HostedPaymentStatusDetails>;
    /**
    * The Unique Identifier of the payment created with the `Institution`.
    */
    'institutionPaymentId'?: string;
    /**
    * The Unique Identifier provided by TPP in the Payment request to identify the payment.
    */
    'paymentLifecycleId'?: string;
    /**
    * A unique identifier that you must provide to identify the payment. This can be any alpha-numeric string but is limited to a maximum of 35 characters.
    */
    'paymentIdempotencyId'?: string;
    /**
    * The payment reference or description. Limited to a maximum of 18 characters for UK institutions.
    */
    'reference'?: string;
    'contextType'?: PaymentContextTypeResponse;
    'type'?: PaymentTypeResponse;
    'payee'?: PayeeDetailsResponse;
    'payer'?: PayerDetailsResponse;
    'amount'?: AmountDetailsResponse;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "paymentId",
            "baseName": "paymentId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "hostedPaymentId",
            "baseName": "hostedPaymentId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "consentId",
            "baseName": "consentId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "institutionIdentifiers",
            "baseName": "institutionIdentifiers",
            "type": "InstitutionIdentifiersResponse",
            "format": ""
        },
        {
            "name": "phases",
            "baseName": "phases",
            "type": "Array<HostedPaymentPhase>",
            "format": ""
        },
        {
            "name": "statusDetails",
            "baseName": "statusDetails",
            "type": "Array<HostedPaymentStatusDetails>",
            "format": ""
        },
        {
            "name": "institutionPaymentId",
            "baseName": "institutionPaymentId",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentLifecycleId",
            "baseName": "paymentLifecycleId",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentIdempotencyId",
            "baseName": "paymentIdempotencyId",
            "type": "string",
            "format": ""
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "string",
            "format": ""
        },
        {
            "name": "contextType",
            "baseName": "contextType",
            "type": "PaymentContextTypeResponse",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "PaymentTypeResponse",
            "format": ""
        },
        {
            "name": "payee",
            "baseName": "payee",
            "type": "PayeeDetailsResponse",
            "format": ""
        },
        {
            "name": "payer",
            "baseName": "payer",
            "type": "PayerDetailsResponse",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "AmountDetailsResponse",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return HostedPayment.attributeTypeMap;
    }

    public constructor() {
    }
}



